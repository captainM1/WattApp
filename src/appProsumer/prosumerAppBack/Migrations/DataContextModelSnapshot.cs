// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prosumerAppBack.DataAccess;

#nullable disable

namespace prosumerAppBack.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("prosumerAppBack.Models.Device.Device", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DeviceTypeID")
                        .HasColumnType("TEXT");

                    b.Property<string>("MacAdress")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DeviceTypeID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DeviceGroups");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceManufacturers", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DeviceManufacturers");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ManufacturerID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");
                    
                    b.Property<string>("Wattage")
                        .IsRequired()
                        .HasColumnType("NUMERIC");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.HasIndex("ManufacturerID");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("prosumerAppBack.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("prosumerAppBack.Models.UsersRequestedToDso", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UsersAppliedToDSO");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.Device", b =>
                {
                    b.HasOne("prosumerAppBack.Models.Device.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("prosumerAppBack.Models.User", "Owner")
                        .WithMany("Devices")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceType", b =>
                {
                    b.HasOne("prosumerAppBack.Models.Device.DeviceGroup", "Group")
                        .WithMany("DeviceTypes")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("prosumerAppBack.Models.Device.DeviceManufacturers", "Manufacturer")
                        .WithMany("DeviceTypes")
                        .HasForeignKey("ManufacturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceGroup", b =>
                {
                    b.Navigation("DeviceTypes");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceManufacturers", b =>
                {
                    b.Navigation("DeviceTypes");
                });

            modelBuilder.Entity("prosumerAppBack.Models.Device.DeviceType", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("prosumerAppBack.Models.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
